/*
 * This file was generated by the Gradle "init" task.
 *
 * This generated file contains a sample Java Library project to get you started.
 * For more details take a look at the Java Libraries chapter in the Gradle
 * User Manual available at https://docs.gradle.org/6.0/userguide/java_library_plugin.html
 */
plugins {
	java
	application
	id("com.github.johnrengelman.shadow") version "6.0.0"
	`build-dashboard`
}

repositories {
    // Use jcenter for resolving dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
    mavenCentral()
}

val javaFXModules = listOf(
    "base",
    "controls",
    "fxml",
    "swing",
    "graphics"
)
// All required for OOP
val supportedPlatforms = listOf("linux", "mac", "win")

dependencies {
    // This dependency is exported to consumers, that is to say found on their compile classpath.
    // api("org.apache.commons:commons-math3:3.6.1")
	
    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    implementation("com.google.guava:guava:28.0-jre")

    // Use JUnit test framework
    testImplementation("junit:junit:4.12")

    // Binary encoder from apache
    implementation("commons-codec:commons-codec:1.14")

    implementation(group = "org.apache.commons", name = "commons-lang3", version = "3.10")

    // Argon2 KDF
    implementation("de.mkammerer:argon2-jvm:2.7")
    
    // Scrypt KDF
    implementation("com.lambdaworks:scrypt:1.4.0")
    
    // JAXB api
    // https://mvnrepository.com/artifact/javax.xml.bind/jaxb-api
    implementation(group = "javax.xml.bind", name = "jaxb-api", version = "2.2.4")
    // JAX-B dependencies for JDK 9+
    implementation("jakarta.xml.bind:jakarta.xml.bind-api:2.3.2")
    implementation("org.glassfish.jaxb:jaxb-runtime:2.3.2")

    for (platform in supportedPlatforms) {
        for (module in javaFXModules) {
            implementation("org.openjfx:javafx-$module:13:$platform")
        }
    }
}

apply(plugin = "com.github.johnrengelman.shadow")

application {
    mainClassName = "application.Main"
}

